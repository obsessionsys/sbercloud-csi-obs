{{- $fullName := include "chart.fullname" . -}}
{{- $name := "pvner" -}}
{{- $data := dict "name" $name "Chart" .Chart "Release" .Release "Values" .Values -}}
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ $fullName }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "chart.labels" $data | nindent 4 }}
  {{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
  {{- end }}
spec:
  serviceName: {{ $fullName | quote }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" $data | nindent 6 }}
  template:
    metadata:
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" $data | nindent 8 }}
    spec:
      serviceAccount: {{ include "chart.serviceAccountName" . }}
      {{- if .Values.imageCredentials.usePrivate }}
      imagePullSecrets: 
        - name: {{ $fullName }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-controller
          image: "{{ .Values.provisioner.image.repository }}:{{ .Values.provisioner.image.tag | default .Chart.AppVersion }}" 
          args:
            - "--v=4"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/kubelet/plugins/ch.ctrox.csi.s3-driver/csi.sock
          imagePullPolicy: {{ .Values.provisioner.image.pullPolicy | quote }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/ch.ctrox.csi.s3-driver
          resources:
            {{- toYaml .Values.provisioner.resources | nindent 12 }}
        - name: {{ .Chart.Name }}-s3-plugin
          image: "{{ .Values.csiplugin.image.repository }}:{{ .Values.csiplugin.image.tag }}"
          args:
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(NODE_ID)"
            - "--v=4"
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/kubelet/plugins/ch.ctrox.csi.s3-driver/csi.sock
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          imagePullPolicy: {{ .Values.csiplugin.image.pullPolicy | quote }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/ch.ctrox.csi.s3-driver
          ports:
            - containerPort: 28343
              name: healthz
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessplugin.livenessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.provisioner.resources | nindent 12 }}
        - name: {{ .Chart.Name }}-liveness
          imagePullPolicy: {{ .Values.livenessplugin.image.pullPolicy | quote }}
          image: "{{ .Values.livenessplugin.image.repository }}:{{ .Values.livenessplugin.image.tag}}"
          args:
            - "--csi-address=/var/lib/kubelet/plugins/ch.ctrox.csi.s3-driver/csi.sock"
            - "--probe-timeout=10s"
            - "--health-port=28343"
            - "--v=5"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/ch.ctrox.csi.s3-driver
          resources:
            {{- toYaml .Values.livenessplugin.resources | nindent 12 }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: socket-dir
          emptyDir: {}
